{"version":3,"sources":["Components/Nav.js","Components/ogaga.jpg","Components/Login.js","Components/Dashboard/Sidebar.js","Components/Dashboard/Recent.js","Components/Dashboard/Dashboard.js","Components/getProfile.js","Components/Article.js","Components/Category.js","Components/About.js","Components/Contact.js","Components/Tweets.js","Components/Updated.js","Components/Trending.js","Components/Episode.js","Components/Forums.js","Components/Starter.js","App.js","serviceWorker.js","index.js","Components/ShowCase.js","Components/Home.js"],"names":["Nav","props","button","React","createRef","state","isLoggedIn","JSON","parse","localStorage","getItem","this","setState","Fragment","className","style","fontSize","href","ref","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","current","click","to","history","push","icon","faUser","color","marginTop","Component","withRouter","module","exports","Login","handleSubmit","e","a","preventDefault","name","swal","email","password","username","phone","confirm","Spinner","console","log","makeSignupReq","loginEmail","loginPassword","retries","isLoading","page","fetch","method","headers","body","stringify","then","response","json","resJson","catch","err","message","signupBody","error","phoneNumber","signin","signinBody","setItem","pathname","user","text","content","closeModal","includes","res","result","success","errno","onSubmit","onChange","target","value","placeholder","makeSigninReq","faArrowCircleRight","marginLeft","float","sendMail","Sidebar","present","presentPage","window","innerWidth","toggle","width","height","faWindowClose","navigateTo","faClock","faTasks","faBook","faKiwiBird","faPen","title","buttons","dangerMode","willDelete","clear","faLongArrowAltLeft","Recent","articles","date","loadArticles","resp","sponsoredUntil","Date","getTime","_id","padding","close","paddingTop","length","map","article","backgroundColor","key","imageUrl","src","alt","now","toDateString","pretext","borderBottom","faThumbsUp","numberOfLikes","faComment","noOfComments","category","episode","dateAdded","sponsor","delete","ScheduleEvent","lazy","Links","EditProfile","Overview","Dashboard","showSidebar","userdata","checkLogin","loadUser","userData","location","screen","scrollTo","changeScreen","bind","position","marginRight","faBars","fontWeight","cursor","Suspense","fallback","flex","display","justifyContent","alignContent","size","reload","change","flexDirection","alignItems","borderRadius","faEnvelope","faPhone","getProfile","Article","liked","comment","loadArticle","match","params","ids","likedArticles","postedOn","authorName","backgroundImage","ReactHtmlParser","marginBottom","articleId","faArrowRight","like","border","comments","toLocaleString","Category","ShowCase","About","class","role","Contact","textAlign","require","Tweeter","tweets","unliked","loadTweets","reverse","likedTweets","tweet","alreadyLiked","url","likes","Updated","Trending","Episode","isAvail","Forums","feeds","reply","loadFeeds","feedbacks","resBody","for","rows","feed","boxShadow","top","right","datePosted","replies","noOfRes","Starter","minHeight","faUserCheck","faPowerOff","faLink","App","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","path","component","Home","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","cur","sponsored","featured","trending","notes","loadPosts","switchEvent","setInterval","prevState","clearInterval","sresp","tresp","fresp","navigate","note","data-v-74a6fb34","faCheck","animateIn"],"mappings":"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","file":"static/js/main.c184d576.chunk.js","sourcesContent":["import React from 'react';\r\nimport swal from 'sweetalert'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport { faArrowRight, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.button = React.createRef()\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const checkLogin = JSON.parse(localStorage.getItem('user'))\r\n\r\n    if (checkLogin) {\r\n      this.setState({ isLoggedIn: true })\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg  fixed-top navbar-light  bg-light\">\r\n          <a style={{ fontSize: 20 }} className=\"navbar-brand \" href=\"/\">Pengist</a>\r\n          <button ref={this.button} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            {/* <span className=\"navbar-toggler-icon\"></span> */}\r\n            <span className=\"bol\"></span>\r\n            <span className=\"bol\"></span>\r\n            <span className=\"bol\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse justify-content-end navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\" navbar-nav justify-content-end \">\r\n              <li className=\"nav-item active\">\r\n                <Link onClick={() => this.button.current.click()} className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n              </li>\r\n              <li className=\"nav-item active\">\r\n                <Link onClick={() => this.button.current.click()} className=\"nav-link\" to=\"/getstarted\">Get started <span className=\"sr-only\">(current)</span></Link>\r\n              </li>\r\n              <li className=\"nav-item active\">\r\n\r\n                <Link onClick={() => this.button.current.click()} className=\"nav-link\" to=\"/about\">About pengist<span className=\"sr-only\">(current)</span></Link>\r\n\r\n              </li>\r\n              <li className=\"nav-item active\">\r\n\r\n                <Link onClick={() => this.button.current.click()} className=\"nav-link\" to=\"/tweeter\">The Streets of Twitter<span className=\"sr-only\">(current)</span></Link>\r\n\r\n              </li>\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/contact\">Contact us <span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              {/* <li className=\"nav-item dropdown\">\r\n                  <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Dropdown\r\n                  </a>\r\n                  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                    <div className=\"dropdown-divider\"></div>\r\n                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                  </div>\r\n                </li> */}\r\n\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              {/* <span\r\n                onClick={\r\n\r\n\r\n                  ()=> {this.button.current.click()\r\n                    \r\n                   this.state.isLoggedIn? (()=>{\r\n                     localStorage.clear('user')\r\n                     swal('Logged Out', 'You can login again', 'success')\r\n                     this.setState({isLoggedIn:false})\r\n                   })(): this.props.history.push('/signup')\r\n                  }\r\n                }\r\n                style={{fontWeight:\"bold\"}} className=\"btn-custom  btn btn-outline-primary  my-2 my-sm-0\" type=\"submit\">{this.state.isLoggedIn?'Logout': 'Signup or Login'}\r\n                <FontAwesomeIcon className=\"all2\" style={{height:14, width:14,\r\n                                          color:'#3297d3',\r\n                                          marginLeft:12,\r\n                                          }} icon={faArrowRight}/></span> */}\r\n\r\n              {\r\n                this.state.isLoggedIn ?\r\n                  <button\r\n                    onClick={\r\n                      () => {\r\n                        this.button.current.click()\r\n\r\n                        this.props.history.push('/dashboard')\r\n                      }\r\n                    }\r\n                    type=\"button\" className=\"btn_thick mr-3 \">\r\n                    <FontAwesomeIcon icon={faUser} style={{ color: 'white' }} />\r\n                  </button>\r\n\r\n                  :\r\n                  <button\r\n                    onClick={\r\n\r\n\r\n                      () => {\r\n                        this.button.current.click()\r\n\r\n                        this.props.history.push('/signup')\r\n                      }\r\n                    }\r\n                    type=\"button\" className=\"btn_thick mr-3 \">\r\n                    Signup or Login\r\n                </button>\r\n              }\r\n\r\n            </form>\r\n          </div>\r\n        </nav>\r\n\r\n\r\n        <p style={{ marginTop: 80 }} className=\"category\">\r\n        <span>\r\n            <Link to=\"/trending\">\r\n              Trending Stories\r\n                     </Link>\r\n          </span>\r\n          <span>\r\n            <a href={`/category/Poems`}>\r\n              Poems\r\n                     </a>\r\n          </span>\r\n          <span>\r\n            <a href={`/category/Series`}>\r\n              Series\r\n                    </a>\r\n          </span>\r\n          <span>\r\n            <Link to=\"/tweeter\">\r\n              Street of Tweeter\r\n                     </Link>\r\n          </span>\r\n          <span>\r\n            <a href={`/category/Short Stories`}>\r\n              Short stories section\r\n                   </a>\r\n          </span>\r\n          \r\n          \r\n\r\n          <span>\r\n            <Link to=\"/updated\">\r\n              Updated stories for today\r\n                      </Link>\r\n\r\n          </span>\r\n          <span>\r\n            <Link to=\"/forums\">\r\n              Forums & Activities\r\n                   </Link>\r\n          </span>\r\n          <span>\r\n            <Link to=\"/forums\">\r\n              help section\r\n                  </Link>\r\n          </span>\r\n          {/* <span>\r\n               sgyusd\r\n            </span>\r\n            <span>\r\n               sgyusd\r\n            </span> */}\r\n        </p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Nav)","module.exports = __webpack_public_path__ + \"static/media/ogaga.0e2df522.jpg\";","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport swal from '@sweetalert/with-react'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {  faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            username: '',\r\n            phone: '',\r\n            password: '',\r\n            confirm: '',\r\n            loginEmail: '',\r\n            loginPassword: '',\r\n            email: '',\r\n            retries: 0,\r\n            isLoading: false,\r\n            page: 1\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    async makeSignupReq() {\r\n        this.setState({ retries: this.state.retries + 1 })\r\n        const { name,\r\n            password,\r\n            email,\r\n            phone,\r\n            username\r\n        }\r\n            = this.state\r\n\r\n        const signupBody = await fetch(\"https://userapipengist.herokuapp.com/signup\", {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                phone,\r\n                username,\r\n                retries: this.state.retries\r\n            })\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (signupBody.error) {\r\n\r\n            swal('', signupBody.error, 'error')\r\n        }\r\n        else if (signupBody === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            this.setState({ name: '', password: '', email: '', phoneNumber: '', username: '' })\r\n            swal(signupBody.message, 'You can login after doing this', 'success')\r\n            this.setState({ signin: true })\r\n        }\r\n\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.name) {\r\n            return swal('Please enter your name', '', 'error')\r\n        }\r\n        if (!this.state.email) {\r\n            return swal('Please enter your email', '', 'error')\r\n        }\r\n        if (!this.state.password) {\r\n            return swal('Oops', 'Enter password', 'error')\r\n        }\r\n        if (!this.state.username) {\r\n            return swal('Oops', 'Enter username', 'error')\r\n        }\r\n        if (!this.state.phone) {\r\n            return swal('Oops', 'Enter phone number', 'error')\r\n        }\r\n        if (this.state.password !== this.state.confirm) {\r\n            return swal('Oops', 'Password does not match', 'error')\r\n        }\r\n        swal(<Spinner />)\r\n        console.log(this.state)\r\n        await this.makeSignupReq()\r\n    }\r\n\r\n\r\n\r\n    async makeSigninReq() {\r\n        if (!this.state.loginEmail) {\r\n            return swal('Please enter your email', '', 'error')\r\n        }\r\n        if (!this.state.loginPassword) {\r\n            return swal('Oops', 'Enter password', 'error')\r\n        }\r\n\r\n        const {\r\n            loginEmail,\r\n            loginPassword,\r\n        }\r\n            = this.state\r\n        const signinBody = await fetch(\"https://userapipengist.herokuapp.com/signin\", {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: loginEmail,\r\n                password: loginPassword\r\n            })\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n        console.log(signinBody)\r\n        if (signinBody.error) {\r\n            return swal('', signinBody.error, 'error')\r\n        }\r\n        else if (signinBody === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            localStorage.setItem('user', JSON.stringify({ signinBody }))\r\n\r\n            this.props.history.push({ pathname: '/dashboard', state: { user: signinBody } })\r\n\r\n        }\r\n\r\n        // console.log(signupBody)\r\n    }\r\n\r\n\r\n\r\n    sendMail() {\r\n        swal({\r\n            text: 'Enter your email address',\r\n            content: \"input\",\r\n            button: {\r\n                text: \"Submit\",\r\n                closeModal: true,\r\n            },\r\n        })\r\n            .then(async (e) => {\r\n\r\n                if (e) {\r\n                    if (!e.includes('@gmail.com')) {\r\n                        return swal('', 'Email invalid', 'error')\r\n                    }\r\n                    swal('loading, please wait...', 'if you dont get a response has soon as possible, click OK and retry', 'info')\r\n                     const result = await fetch('https://userapipengist.herokuapp.com/forgot', {\r\n                        // const result = await fetch('http://localhost:4000/forgot', {\r\n                        method: \"Post\",\r\n                        headers: {\r\n                            \"Content-type\": 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                           email: e\r\n                        })\r\n                    })\r\n                        .then(res => res.json()).then(resJson => resJson).catch(err => err)\r\n                    if (result === \"Failed to fetch\") {\r\n                        // this.setState({showSpinner1:false})\r\n                        return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n                    }\r\n                    if (result.error) {\r\n                        swal('', result.error, 'error')\r\n                    }\r\n                    if (result.success) {\r\n                        swal('', 'A message has been sent to your email. Please kindly check it out', 'success')\r\n                    }\r\n                    if (result.errno) {\r\n                        swal('', 'An error occured while we are sending an email to you, please checkout your network connection and try again', 'error')\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"left col-md-6\">\r\n                        <h2>Pengist</h2>\r\n                        <h5>...pen down your mind</h5>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6 right\">\r\n\r\n                        <a style={{ fontSize: 20 }} className=\"navbar-brand \" href=\"/\">Pengist</a>\r\n\r\n                        {\r\n                            this.state.page === 1 ?\r\n                                <React.Fragment>\r\n                                    <h4 className=\"login-text\">Login to your Pengist account</h4>\r\n                                    <p className=\"my-1 text-secondary\">Don't have an accout? <Link onClick={() => this.setState({ page: 2 })}>Signup</Link></p>\r\n                                    <form onSubmit={this.handleSubmit} className=\"login_form\">\r\n\r\n                                        <div>\r\n                                            <label className=\"label_login\">Email</label><br />\r\n                                            <input onChange={e => this.setState({ loginEmail: e.target.value })} type=\"email\" placeholder=\"Enter your email \" className=\"input-box\" />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <label className=\"label_login\">Password</label><br />\r\n                                            <input onChange={e => this.setState({ loginPassword: e.target.value })} type=\"password\" placeholder=\"Enter password\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" onClick={() => this.makeSigninReq()} className=\"btn btn_thick mt-4 lt_\">\r\n                                                Login <FontAwesomeIcon icon={faArrowCircleRight} style={{ marginLeft: 4 }} />\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <span style={{ float: 'right' }} onClick={() => this.sendMail()} className=\"text-primary\">forgot password?</span>\r\n\r\n\r\n                                    </form>\r\n                                </React.Fragment>\r\n                                :\r\n                                <>\r\n                                    <h4 className=\"login-text\">Signup to your Pengist account</h4>\r\n                                    <p className=\"my-1 text-secondary\">Already have an accout? <Link onClick={() => this.setState({ page: 1 })}>Login</Link></p>\r\n                                    <form onSubmit={this.handleSubmit} className=\"login_form\">\r\n                                        <div>\r\n                                            <label className=\"label_login\">Name</label><br />\r\n                                            <input onChange={e => this.setState({ name: e.target.value })} type=\"text\" placeholder=\"Enter your full name\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"label_login\">Username</label><br />\r\n                                            <input onChange={e => this.setState({ username: e.target.value })} type=\"text\" placeholder=\"Enter your username\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"label_login\">Phone number</label><br />\r\n                                            <input onChange={e => this.setState({ phone: e.target.value })} type=\"text\" placeholder=\"Enter your phone number\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"label_login\">Email</label><br />\r\n                                            <input onChange={e => this.setState({ email: e.target.value })} type=\"email\" placeholder=\"Enter your email\" className=\"input-box\" />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <label className=\"label_login\">Password</label><br />\r\n                                            <input onChange={e => this.setState({ password: e.target.value })} type=\"password\" placeholder=\"Enter your password\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"label_login\">Confirm Password</label><br />\r\n                                            <input onChange={e => this.setState({ confirm: e.target.value })} type=\"password\" placeholder=\"Enter your password\" className=\"input-box\" />\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"btn btn_thick mt-4 lt_\">\r\n                                                Sign up <FontAwesomeIcon icon={faArrowCircleRight} style={{ marginLeft: 4 }} />\r\n                                            </button>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </form>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUpload, faWindowClose, faLink, faClock, faListAlt, faThermometer, faPen, faTasks, faKiwiBird, faBook, faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport swal from 'sweetalert';\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        const { presentPage: present } = this.props\r\n        return (\r\n            <div className=\"col-md-2 col-sm-3 sidebar\">\r\n                {window.innerWidth <= 768 ?\r\n                    <div onClick={() => this.props.toggle()} className=\"close_btn\" style={{ float: 'right' }}>\r\n                        <FontAwesomeIcon style={{ width: 25, height: 25, color: 'green' }} icon={faWindowClose} />\r\n                    </div> : null}\r\n\r\n                <a style={{ fontSize: 20 }} className=\"navbar-brand \" href=\"/\">Pengist</a>\r\n                <div className=\"cd\">\r\n                    <h5>{this.props.user.name}</h5>\r\n                    <p>{this.props.user.email}</p>\r\n                </div>\r\n                <div\r\n                    onClick={() => {\r\n                        this.props.navigateTo('home')\r\n                        this.props.toggle()\r\n\r\n                    }}\r\n\r\n                    className={present === \"home\" ? ` cr  sidebar_item` : 'sidebar_item'}>\r\n\r\n                    <span > <FontAwesomeIcon icon={faClock} className={present === \"home\" ? `cr cr_icon` : \"sidebar_text\"} /></span>  <span className=\"sidebar_text\">Post Article</span>\r\n\r\n                </div>\r\n\r\n                <div onClick={() => {\r\n                    this.props.navigateTo('schedule')\r\n                    this.props.toggle()\r\n\r\n                }} className={present === \"schedule\" ? ` cr  sidebar_item` : 'sidebar_item'}>\r\n\r\n                    <span><FontAwesomeIcon icon={faTasks} className={present === \"schedule\" ? `cr cr_icon` : \"sidebar_text\"} /></span> <span className=\"sidebar_text\" >View articles by you</span>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.props.user.email === \"admin@gmail.com\" &&\r\n                    <div\r\n                        onClick={() => {\r\n                            this.props.navigateTo('recent')\r\n\r\n                            this.props.toggle()\r\n                        }}\r\n\r\n                        className={present === \"recent\" ? ` cr  sidebar_item` : 'sidebar_item'}>\r\n\r\n                        <span><FontAwesomeIcon className={present === \"recent\" ? `cr cr_icon` : \"sidebar_text\"} icon={faBook} /></span> <span className=\"sidebar_text\">View recent posts </span>\r\n\r\n                    </div>\r\n                }\r\n\r\n\r\n                <div onClick={() => {\r\n                    this.props.navigateTo('links')\r\n                    this.props.toggle()\r\n\r\n                }} className={present === \"links\" ? ` cr  sidebar_item` : 'sidebar_item'}>\r\n\r\n                    <span> <FontAwesomeIcon className={present === \"links\" ? `cr cr_icon` : \"sidebar_text\"} icon={faKiwiBird} /></span> <span className=\"sidebar_text\">Tweeter handle</span>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.props.user.email === \"admin@gmail.com\" &&\r\n                    <div\r\n                        onClick={() => {\r\n                            this.props.navigateTo('edit')\r\n                            this.props.toggle()\r\n\r\n                        }}\r\n\r\n                        className={present === \"edit\" ? ` cr  sidebar_item` : 'sidebar_item'}>\r\n\r\n                        <span><FontAwesomeIcon className={present === \"edit\" ? `cr cr_icon` : \"sidebar_text\"} icon={faPen} /></span> <span className=\"sidebar_text\" >Todays note</span>\r\n\r\n                    </div>\r\n\r\n\r\n                }\r\n                <div\r\n                    onClick={() => {\r\n                        swal({\r\n                            title: \"Are you sure?\",\r\n                            text: \"\",\r\n                            icon: \"warning\",\r\n                            buttons: true,\r\n                            dangerMode: true,\r\n                        })\r\n                            .then((willDelete) => {\r\n                                if (willDelete) {\r\n                                    localStorage.clear('user')\r\n                                    this.props.history.push('/')\r\n                                } else {\r\n\r\n                                }\r\n                            })\r\n                    }}\r\n\r\n                    className={'sidebar_item'}>\r\n\r\n                    <span><FontAwesomeIcon className={\"sidebar_text\"} icon={faLongArrowAltLeft} /></span> <span className=\"sidebar_text\" >logout</span>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Sidebar)","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport swal from '@sweetalert/with-react'\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Recent extends Component {\r\n    state = {\r\n        articles: [],\r\n        date: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.loadArticles()\r\n    }\r\n    async loadArticles() {\r\n\r\n        let resp = await fetch(`https://apiarticlepengist.herokuapp.com/get-posts`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n        if (resp.error) {\r\n            return swal('', resp.error, 'error')\r\n        }\r\n        else if (resp === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n\r\n            this.setState({ articles: resp })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    async sponsor(id) {\r\n        let resp = await fetch(`https://apiarticlepengist.herokuapp.com/sponsor`, {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                sponsoredUntil: new Date(this.state.date).getTime(),\r\n                _id: id\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n        if (resp.error) {\r\n            return swal('', resp.error, 'error')\r\n        }\r\n        else if (resp === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            this.setState({ date: '' })\r\n            this.loadArticles()\r\n            swal('Success', 'Post Sponsored', 'success')\r\n        }\r\n    }\r\n    async delete(id) {\r\n       swal('Please wait...', '', 'info')\r\n        let deleted = await fetch(`https://apiarticlepengist.herokuapp.com/delete-article/${id}`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n           \r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!deleted.error) {\r\n            \r\n            this.loadArticles()\r\n            swal('deleted', '', 'success')\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 6 }} onClick={() => this.props.close()} className=\"container schedule recent\">\r\n\r\n\r\n                <div style={{ marginTop: 40, paddingTop: 30 }}>\r\n                    <h3 >Recent posts</h3>\r\n                    {\r\n                        this.state.articles.length > 0 ?\r\n                            this.state.articles.map(article => {\r\n                                return (\r\n                                    < div style={{ backgroundColor: 'white', padding: 20 }} className=\" my-3\" key={article._id}>\r\n                                        {article.imageUrl && <img src={article.imageUrl} className=\"mr-3 ml-2 article_im\" alt=\"...\" />}\r\n                                        <div className=\"media-body\">\r\n                                            <div className=\"row justify-content-end\">\r\n                                                {\r\n                                                    article.sponsoredUntil > Date.now() ?\r\n                                                        <div style={{ fontSize: 9 }} className=\"badge mr-4 badge-danger\">Sponsored till {new Date(article.sponsoredUntil).toDateString()}</div>\r\n                                                        : null\r\n                                                }\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <h5 className=\"mt-1\">{article.title}</h5>\r\n                                            <div>\r\n                                                {article.pretext && <small className=\"mt-3\">{article.pretext}</small>}\r\n                                            </div>\r\n\r\n                                            <div style={{ borderBottom: '1px solid rgba(0,0,0,0.07)' }} className=\"row justify-content-end pr-3\">\r\n                                                <span style={{ marginLeft: 20 }}>\r\n                                                    <FontAwesomeIcon style={{ color: 'rgba(0,0,0,0.5)', fontSize: 13 }} icon={faThumbsUp} /> <small>{article.numberOfLikes}</small>\r\n                                                </span>\r\n                                                <span className=\"ml-3 mr-3\">\r\n                                                    <FontAwesomeIcon style={{ color: 'rgba(0,0,0,0.5)', fontSize: 13 }} icon={faComment} /> <small>{article.noOfComments}</small>\r\n                                                </span>\r\n                                            </div>\r\n                                            {article.category === \"Series\" ? <div> <small>Episode: <b>{article.episode}</b></small></div> : null}\r\n\r\n                                            <small>Category : <b className=\"\">{article.category}</b></small><br />\r\n                                            <small style={{ fontSize: 11, }}>Posted On {new Date(article.dateAdded).toDateString()}</small>\r\n                                            <div className=\"row align-items-center justify-content-space-around\">\r\n                                                <div className=\"mt-1 ml-2\">\r\n                                                    <a style={{ color: \"white\" }} href={`/article/${article._id}`} className=\"btn_thick btn-sm mt-2 read\">\r\n                                                        Read More\r\n                                                </a>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-2 ml-2 \">\r\n                                                    <label>Sponsor post until</label><br />\r\n                                                    <input value={this.state.date} onChange={(e) => this.setState({ date: e.target.value })} type=\"date\" />\r\n                                                </div>\r\n                                                <div className=\"mt-1 mr-2 ml-1 \">\r\n                                                    <input onClick={() => {\r\n                                                        if (this.state.date) {\r\n                                                            this.sponsor(article._id)\r\n                                                        }\r\n                                                        else {\r\n                                                            swal(<div>Please choose a date</div>)\r\n                                                        }\r\n\r\n                                                    }} type=\"button\" className=\"btn btn-sm btn-success\" value=\"Save\" />\r\n                                                </div>\r\n                                                <div className=\"mt-1 mr-2 ml-1 \">\r\n                                                    <input onClick={() => {\r\n                                                        swal({\r\n                                                            title: \"Are you sure?\",\r\n                                                            text: \"\",\r\n                                                            icon: \"warning\",\r\n                                                            buttons: true,\r\n                                                            dangerMode: true,\r\n                                                        })\r\n                                                            .then((willDelete) => {\r\n                                                                if (willDelete) {\r\n                                                                    this.delete(article._id)\r\n                                                                } else {\r\n\r\n                                                                }\r\n                                                            })\r\n                                                    }}\r\n\r\n                                                     type=\"button\" className=\"btn btn-sm btn-danger\" value=\"Delete Article\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            :\r\n                            <h3>No post for now check back later</h3>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Spinner } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n// import { faUser,faBars, faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport Sidebar from './Sidebar';\r\nimport swal from 'sweetalert';\r\nimport Recent from './Recent';\r\n\r\n\r\nconst ScheduleEvent = React.lazy(() => import('./ScheduleEvent'))\r\nconst Links = React.lazy(() => import('./Links'))\r\nconst EditProfile = React.lazy(() => import('./EditProfile'))\r\n\r\nconst Overview = React.lazy(() => import('./Overview'));\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSidebar: false,\r\n      presentPage: 'home',\r\n      userdata: [],\r\n      user: {}\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    const checkLogin = JSON.parse(localStorage.getItem('user'))\r\n\r\n    if (!checkLogin) {\r\n      return this.props.history.push('/signup')\r\n    }\r\n    else {\r\n      await this.loadUser(checkLogin.signinBody)\r\n    }\r\n  }\r\n\r\n  async loadUser(userData) {\r\n    const user = this.props.location.state ? this.props.location.state.user : userData\r\n \r\n    let resp = await fetch(`https://userapipengist.herokuapp.com/get-user/${user._id}`, {\r\n      method: 'Get',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then(resJson => resJson)\r\n      .catch(err => err.message)\r\n    console.log(resp)\r\n    this.setState({ user: resp })\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ showSidebar: !this.state.showSidebar })\r\n  }\r\n  changeScreen(screen) {\r\n    window.scrollTo(0, 0)\r\n    this.setState({ presentPage: screen })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"container-fluid dash\">\r\n\r\n        <div className=\"row \">\r\n\r\n\r\n          {\r\n            this.state.showSidebar && window.innerWidth <= 768 ?\r\n\r\n              <Sidebar presentPage={this.state.presentPage} navigateTo={this.changeScreen.bind(this)} user={this.state.user} toggle={this.toggle.bind(this)} />\r\n\r\n              :\r\n              window.innerWidth > 768 ?\r\n                <Sidebar presentPage={this.state.presentPage} user={this.state.user} navigateTo={this.changeScreen.bind(this)} toggle={this.toggle.bind(this)} />\r\n                :\r\n                null\r\n\r\n          }\r\n\r\n          <div style={{ position: `${window.innerWidth < 768 ? \"absolute\" : 'relative'} ` }} className=\"col-md-10 col-sm-3 dashboard_right\">\r\n\r\n\r\n            <div className=\"dash_nav\">\r\n              <div className=\"icon__\" style={{ float: 'left', marginTop: 14, marginRight: 30 }}  >\r\n                <span className=\"__icon\" onClick={this.toggle.bind(this)}><FontAwesomeIcon style={{ width: 30, marginLeft: 14, height: 27 }} icon={faBars} />\r\n                </span>\r\n                <span style={{ fontWeight: '600', color: 'white', marginLeft: 10 }} className=\"logout_text\">\r\n                  {this.state.user.name ? this.state.user.name : null}\r\n                </span>\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div style={{ float: 'right', cursor: 'pointer', marginTop: 14, marginRight: 30 }} className=\"user\">\r\n\r\n                {/* <span onClick={()=> this.changeScreen('edit')}><FontAwesomeIcon icon={faUser} /></span> */}\r\n                <span\r\n                  style={{ fontWeight: '600', marginLeft: 40, cursor: 'pointer' }} onClick={() => {\r\n                    swal({\r\n                      title: \"Are you sure?\",\r\n                      text: \"\",\r\n                      icon: \"warning\",\r\n                      buttons: true,\r\n                      dangerMode: true,\r\n                    })\r\n                      .then((willDelete) => {\r\n                        if (willDelete) {\r\n                          localStorage.clear('user')\r\n                          this.props.history.push('/')\r\n                        } else {\r\n\r\n                        }\r\n                      });\r\n                  }} className=\"logout_text\">\r\n                  {/* <span >logout<FontAwesomeIcon style={{ marginLeft: 6, cursor: 'point' }} icon={faSignOutAlt} /></span> */}\r\n                </span>\r\n\r\n\r\n              </div>\r\n\r\n            </div>\r\n            {\r\n              this.state.presentPage === 'home' ?\r\n                <React.Suspense fallback={\r\n                  <div style={{ backgroundColor: 'white', height: 400, flex: 1, display: 'flex', justifyContent: 'center', alignContent: 'center' }} className=\"container schedule\">\r\n                    <div>\r\n                      <Spinner size='large' />\r\n                    </div>\r\n                  </div>\r\n                }>\r\n                  <Overview user={this.state.user} reload={() => this.loadUser()} change={this.changeScreen.bind(this)} close={() => this.setState({ showSidebar: false })} />\r\n                </React.Suspense>\r\n\r\n                :\r\n                this.state.presentPage === 'schedule' ?\r\n                  <React.Suspense fallback={\r\n                    <div style={{ backgroundColor: 'white', height: 400, flex: 1, display: 'flex', justifyContent: 'center', alignContent: 'center' }} className=\"container schedule\">\r\n                      <div>\r\n                        <Spinner size='large' />\r\n                      </div>\r\n                    </div>\r\n                  }> <ScheduleEvent user={this.state.user} changeScreen={this.changeScreen.bind(this)} close={() => this.setState({ showSidebar: false })} />\r\n                  </React.Suspense>\r\n                  :\r\n                  this.state.presentPage === 'links' ?\r\n                    <React.Suspense fallback={\r\n                      <div style={{ backgroundColor: 'white', height: 400, flexDirection: 'column', flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"container schedule\">\r\n                        <div>\r\n                          <Spinner size='large' />\r\n                        </div>\r\n                      </div>\r\n                    }><Links user={this.state.user} change={this.changeScreen.bind(this)} close={() => this.setState({ showSidebar: false })} /></React.Suspense>\r\n                    :\r\n                    this.state.presentPage === 'edit' ?\r\n                      <React.Suspense fallback={\r\n                        <div style={{ backgroundColor: 'white', height: 400, flex: 1, display: 'flex', justifyContent: 'center', alignContent: 'center' }} className=\"container schedule\">\r\n                          <div>\r\n                            <Spinner size='large' />\r\n                          </div>\r\n                        </div>\r\n                      }>\r\n                        <EditProfile changeScreen={this.changeScreen.bind(this)} close={() => this.setState({ showSidebar: false })} />\r\n                      </React.Suspense>\r\n                      :\r\n\r\n                      this.state.presentPage === \"recent\" ?\r\n                        <React.Suspense fallback={\r\n                          <div style={{ backgroundColor: 'white', height: 400, flex: 1, display: 'flex', justifyContent: 'center', alignContent: 'center' }} className=\"container schedule\">\r\n                            <div>\r\n                              <Spinner size='large' />\r\n                            </div>\r\n                          </div>\r\n                        }>\r\n                          <Recent changeScreen={this.changeScreen.bind(this)} close={() => this.setState({ showSidebar: false })} />\r\n\r\n                        </React.Suspense>\r\n                        :\r\n                        null\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport swal from '@sweetalert/with-react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope, faPhone, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nasync function getProfile(id) {\r\n    swal('Please wait...', '', 'info')\r\n    // const user = await fetch(`https://userapipengist.herokuapp.com/get-user-name/${id}`, {\r\n    const user = await fetch(`https://userapipengist.herokuapp.com/get-user-name/${id}`, {\r\n        method: 'Get',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    })\r\n        .then((response) => response.json())\r\n        .then(resJson => resJson)\r\n        .catch(err => err.message)\r\n    if (user.name) {\r\n        return swal(\r\n            <div >\r\n                <FontAwesomeIcon icon={faUser} style={{ height: 50, width: 50, color: 'white', borderRadius: '50%', backgroundColor: \"lightgreen\" }} />\r\n                <div>\r\n                    <h2>{user.name}</h2>\r\n                    <h5 className=\"my-4\">{user.username} </h5>\r\n                    <h5 className=\"my-4\"><FontAwesomeIcon icon={faEnvelope} style={{ color: 'rgba(0,0,0,0.6)', marginRight:10 }} />{user.email}</h5>\r\n                    <h6 className=\"my-4\"><FontAwesomeIcon icon={faPhone} style={{ color: 'rgba(0,0,0,0.6)', marginRight:4 }} />{user.phone}</h6>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default getProfile","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\n\r\nimport swal from '@sweetalert/with-react'\r\nimport ReactHtmlParser, { processNodes, convertNodeElement, htmlParser } from 'react-html-parser'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport getProfile from './getProfile';\r\n\r\nexport default class Article extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      article: {},\r\n      liked: false,\r\n      comment: '',\r\n      content: '',\r\n      name: ''\r\n\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.loadArticle()\r\n  }\r\n  async loadArticle() {\r\n    let article = await fetch(`https://apiarticlepengist.herokuapp.com/get-article/${this.props.match.params.id}`, {\r\n      method: 'Get',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then(resJson => resJson)\r\n      .catch(err => err.message)\r\n    if (article.error) {\r\n      return swal('Oops', 'cannot load content,try again later', 'info')\r\n    }\r\n    else {\r\n      let likedArticles = JSON.parse(localStorage.getItem('likedArticles')) || { ids: [''] }\r\n      if (likedArticles.ids.includes(article._id)) {\r\n        this.setState({ liked: true })\r\n      }\r\n      this.setState({ content: article.content })\r\n      this.setState({ article })\r\n    }\r\n\r\n  }\r\n  async like() {\r\n    let liked = await fetch(`https://apiarticlepengist.herokuapp.com/post-like/${this.state.article._id}`, {\r\n      method: 'Post',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then(resJson => resJson)\r\n      .catch(err => err.message)\r\n    if (!liked.error) {\r\n      let likedArticles = JSON.parse(localStorage.getItem('likedArticles')) || { ids: [''] }\r\n      localStorage.setItem('likedArticles', JSON.stringify({ ids: [...likedArticles.ids, this.state.article._id] }))\r\n      await this.loadArticle()\r\n      return this.setState({ liked: true })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  async comment() {\r\n    let liked = await fetch(`https://apiarticlepengist.herokuapp.com/post-comment/${this.state.article._id}`, {\r\n      // let liked = await fetch(`http://localhost:4001/post-comment/${this.state.article._id}`, {\r\n      method: 'Post',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        text: this.state.comment,\r\n        postedOn: Date.now(),\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then((response) => response.json())\r\n      .then(resJson => resJson)\r\n      .catch(err => err.message)\r\n    if (!liked.error) {\r\n      await this.loadArticle()\r\n      return this.setState({ comment: '', name: '' })\r\n    }\r\n\r\n\r\n  }\r\n  render() {\r\n    const { article } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <div className=\"container\">\r\n          <div className=\"row article\">\r\n            <div className=\"col-md-8 col-sm-12\">\r\n\r\n              <h1>\r\n                {article.title}\r\n              </h1>\r\n              {article.category === \"Series\" && <div>Episode {article.episode}</div>}\r\n\r\n              <p onClick={() => getProfile(article.authorName)} style={{ fontWeight: 'bold',cursor:'pointer', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                <FontAwesomeIcon  style={{ fontSize: 24, color: \"white\", backgroundColor: \"rgba(0,0,0,0.4)\", cursor: 'pointer', marginRight: 10, borderRadius: '50%' }} icon={faUser} />  By {article.authorName}\r\n              </p>\r\n              <p className=\"text-secondary\">\r\n                Posted on {new Date(article.dateAdded).toDateString()}\r\n              </p>\r\n              {\r\n                article.imageUrl\r\n                &&\r\n                <div style={{ backgroundImage: `url(${article.imageUrl})` }} className=\"art_img\">\r\n\r\n                </div>\r\n              }\r\n\r\n              {\r\n                <div>\r\n                  {\r\n                    ReactHtmlParser(this.state.content)\r\n                  }\r\n\r\n                </div>\r\n              }\r\n              {/* <p>\r\n                       {renderWithHTML(article.content)}\r\n                     </p> */}\r\n\r\n\r\n\r\n              <hr />\r\n\r\n              <p style={{ fontSize: 16 }}>\r\n                WRITTEN BY\r\n                     </p>\r\n              <h3 style={{ fontWeight: 'bold' }}>\r\n                <FontAwesomeIcon onClick={() => getProfile(article.authorName)} style={{ fontSize: 30,marginBottom:-7, color: \"white\", backgroundColor: \"rgba(0,0,0,0.4)\", cursor: 'pointer', marginRight: 10, borderRadius: '50%' }} icon={faUser} />  {article.authorName}\r\n\r\n              </h3>\r\n              {article.category === \"Series\" && <a href={`/episode/${article.articleId}/${article.episode + 1}`}><div className=\"btn float-right btn-success\">Move to episode {article.episode + 1} <FontAwesomeIcon icon={faArrowRight} /> </div></a>}\r\n\r\n              <p>\r\n                <span onClick={() => {\r\n                  if (!this.state.liked) {\r\n                    this.like()\r\n                  }\r\n\r\n\r\n\r\n                }} style={{ padding: 10, justifyContent: 'center', cursor: 'pointer',marginTop:40, borderRadius: \"50%\", height: 70, width: 70, alignItems: 'center', display: 'flex', border: `1px solid ${this.state.liked ? '#28a745' : 'rgba(0,0,0,0.3)'}` }}>\r\n                  <FontAwesomeIcon style={{ height: 24, width: 24, cursor: 'pointer', color: this.state.liked ? '#28a745' : 'rgba(0,0,0,0.4)', marginRight: 10 }} icon={faThumbsUp} />\r\n                  {\r\n                    article.numberOfLikes\r\n                  }\r\n                </span>\r\n\r\n\r\n\r\n              </p>\r\n              <h5 className=\"mt-4\">Comments {article.noOfComments}</h5>\r\n\r\n\r\n              <hr />\r\n              <h6>Comments</h6>\r\n\r\n              <div style={{ marginBottom: 40 }} className=\"p-1\">\r\n\r\n                {article.comments &&\r\n                  article.comments.map(comment => {\r\n                    return (\r\n                      <div key={comment._id} className=\"row  mt-2\" style={{ backgroundColor: 'rgba(0,0,0,0.04)', padding: 10, borderRadius: 7 }}>\r\n                        <div className=\"col-sm-12 col-md-3\">\r\n                          <span style={{ fontSize: 13, color: \"rgba(0,0,0,0.6)\" }}>{comment.name}</span>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-7\">\r\n                          <span >{comment.text}</span>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-2\">\r\n                          <small>{new Date(comment.postedOn).toLocaleString()}</small>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              <div >\r\n                <input type=\"text\"\r\n                  className=\"input-box\"\r\n                  value={this.state.name}\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                  placeholder=\"Enter your name\"\r\n                />\r\n\r\n                <textarea type=\"text\"\r\n                  className=\"form-control mt-2\"\r\n                  value={this.state.comment}\r\n                  onChange={(e) => this.setState({ comment: e.target.value })}\r\n                  placeholder=\"Write comment\"\r\n                ></textarea>\r\n\r\n                <button onClick={() => {\r\n                  if (!this.state.comment || !this.state.name) {\r\n                    return swal('', 'Please enter name and comment to perform this action', 'error')\r\n                  }\r\n                  this.comment()\r\n                }} className=\"btn_thick my-3\">\r\n                  Comment\r\n              </button>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport swal from '@sweetalert/with-react'\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowCase from './ShowCase';\r\nexport default class Category extends Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         articles: []\r\n      }\r\n\r\n   }\r\n   async componentDidMount() {\r\n      await this.loadArticles()\r\n   }\r\n   async loadArticles() {\r\n\r\n      let resp = await fetch(`https://apiarticlepengist.herokuapp.com/get-category/${this.props.match.params.category}`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => resJson)\r\n         .catch(err => err.message)\r\n\r\n      if (resp.error) {\r\n         return swal('', resp.error, 'error')\r\n      }\r\n      else if (resp === \"Failed to fetch\") {\r\n\r\n         return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n      }\r\n      else {\r\n         console.log(resp)\r\n         this.setState({ articles: resp })\r\n      }\r\n\r\n\r\n\r\n   }\r\n   render() {\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <Nav />\r\n            <div className=\"container\">\r\n               <div className=\"row article\">\r\n                  <div style={{ display: 'flex', justifyContent: 'center' }} className=\"col-md-12 col-sm-12\">\r\n                     <div className=\"col-md-6 p-0 media_cont col-sm-12 mb-4\">\r\n                        <h4>\r\n                           {this.props.match.params.category}\r\n                        </h4>\r\n                        <div className=\"col-md-12 col-sm-12 medias\">\r\n                           {\r\n                              this.state.articles.length > 0 ?\r\n                                 this.state.articles.map(article => {\r\n                                    return (\r\n                                       <ShowCase article={article} />\r\n                                    )\r\n                                 })\r\n\r\n                                 :\r\n                                 <Spinner />\r\n\r\n                           }\r\n\r\n\r\n\r\n                        </div>\r\n                     </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </React.Fragment>\r\n      )\r\n   }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faPenNib, faPenAlt, faPen } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div style={{ marginTop: 90 }} class=\"jumbotron\">\r\n                        <h1 style={{ fontWeight: 'bold' }} class=\"display-4\">About Pengist  <FontAwesomeIcon icon={faPen} /></h1>\r\n                        <p class=\"lead mt-4\">Pengist is a community that seeks to harbor Writers and Readers in a conducive, engaging and entertaining atmosphere...\r\n                            We also seek to encourage writers and Readers with various contests and awards which includes cash prices...</p>\r\n                        <hr class=\"my-4\" />\r\n\r\n                        <a class=\"btn btn_thick btn-lg\" href=\"/signup\" role=\"button\">Become a Pengister</a>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div style={{ padding: 20, width: '100%', marginTop: 50 }} className=\"\">\r\n                            <p className=\"text-center text-secondary\">  © 2020, Pengist inc</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useState, useRef } from 'react'\r\nimport Nav from './Nav'\r\nimport swal from '@sweetalert/with-react'\r\nimport JoditEditor from \"jodit-react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faPenNib, faPenAlt, faPen, faPhone } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div style={{ marginTop: 90 }} class=\"jumbotron\">\r\n                        <h1 style={{ fontWeight: 'bold' }} class=\"display-4 text-center\">Contact us  </h1>\r\n                        <h3 style={{ textAlign: 'center' }}>Meet the CEO</h3>\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }} className=\"row\">\r\n                            <img src={require('./ogaga.jpg')} className=\"img-fluid\" alt=\"loading...\" />\r\n                        </div>\r\n\r\n                        <p class=\"lead mt-4 text-center\">Pengist is the brain child of Christopher Oghenewogaga Vantus an all-around writer with the support of great minds like Adewumi Sunkanmi </p>\r\n                        <p>Facebook <a href=\"https://facebook.com/profile.php?id=100006762968170&ref=content_filter\">Christopher Oghenewogaga Vantus</a></p>\r\n                        <p>Instagram <a href=\"https://instagram.com/ogaga_bleeds\">@Ogaga_bleeds</a></p>\r\n                        <p>Message Pengist.org directly on WhatsApp: <a href=\"https://wa.me/message/ZRDCNSDR7TJHJ1\"><FontAwesomeIcon style={{ color: '#28a745' }} icon={faPhone} /> </a> </p>\r\n                        <hr class=\"my-4\" />\r\n                        <a class=\"btn btn_thick btn-lg\" href=\"/signup\" role=\"button\">Become a Pengister</a>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div style={{ padding: 20, width: '100%', marginTop: 50 }} className=\"\">\r\n                            <p className=\"text-center text-secondary\"> © 2020, Pengist inc</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const Contact = () => {\r\n//     const config = {\r\n//         readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n//       }\r\n//       const editor = useRef(null)\r\n//     const [id, setId] = useState('')\r\n//     const [jobTitle, setJobTitle] = useState('')\r\n//     const [category, setCategory] = useState('')\r\n//     const [jobType, setJobType] = useState('')\r\n//     const [companyHq, setCompanyHq] = useState('')\r\n//     const [regionalRestrictions, setRegion] = useState('')\r\n//     const [applicationLink, setApplicationLink] = useState('')\r\n//     const [jobDescription, setJobDescription] = useState('')\r\n//     const [companyName, setCompanyName] = useState('')\r\n//     const [companyStatement, setCompanyStatement] = useState('')\r\n//     const [logoUrl, setLogoUrl] = useState('')\r\n//     const [websiteUrl, setWebsiteUrl] = useState('')\r\n//     const [companyEmail, setCompanyEmail] = useState('')\r\n//     const [companyDescription, setCompanyDecription] = useState('')\r\n//     const [datePosted, setDatePosted] = useState('')\r\n//     const [planType, setPlanType] = useState('')\r\n//     const [count, setCount] =useState(0)\r\n//     const [jobPosted, setJobPosted] = useState(0)\r\n//    async function postJob(){\r\n//         let job= {\r\n//             id,\r\n//             jobType,\r\n//             jobTitle,\r\n//             category,\r\n//             companyHq,\r\n//             regionalRestrictions,\r\n//             applicationLink,\r\n//             jobDescription,\r\n//             companyName,\r\n//             companyStatement,\r\n//             logoUrl,\r\n//             websiteUrl,\r\n//             companyEmail,\r\n//             companyDescription,\r\n//             datePosted,\r\n//             planType,\r\n//             jobPosted\r\n//         }\r\n\r\n//      const postBody = await fetch(\"http://localhost:4001/add-job\",{\r\n//         method:'Post',\r\n//         headers:{\r\n//             'Content-type':'application/json'\r\n//         },\r\n//         body: JSON.stringify({\r\n//            ...job\r\n//         })\r\n\r\n//     })\r\n//     .then((response)=>response.json())\r\n//     .then(resJson => resJson)\r\n//     .catch(err => err.message)\r\n//     if(!postBody.error){\r\n//         setCount(count+1)\r\n//         swal('done',`${count}`, 'success')\r\n//     }\r\n//     }\r\n\r\n\r\n//    let text= ''\r\n//    let cDes=''\r\n//     return (\r\n//         <div style={{marginLeft:70}}>\r\n//             <div>\r\n//                 <label>\r\n//                     id\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setId(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     jobTitle\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setJobTitle(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     jobCategory\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setCategory(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     jobType\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setJobType(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     companyHq\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setCompanyHq(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     regionalRestrictions\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setRegion(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      applicationLink\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setApplicationLink(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      jobDescription\r\n//                 </label><br />\r\n//                 <JoditEditor\r\n//                 ref={editor}\r\n\r\n//                 config={config}\r\n//                 onChange={(e)=> {text=e} }\r\n//                 tabIndex={5} // tabIndex of textarea\r\n//                 onBlur={(e)=>{setJobDescription(text)\r\n//               }}\r\n//                 />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      companyName\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setCompanyName(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      companyStatement\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setCompanyStatement(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      logoUrl\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setLogoUrl(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      websiteUrl\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setWebsiteUrl(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      companyEmail\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setCompanyEmail(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      companyDescription\r\n//                 </label><br />\r\n//                 <JoditEditor\r\n//                 ref={editor}\r\n\r\n//                 config={config}\r\n//                 onChange={(e)=> {cDes=e} }\r\n//                 tabIndex={5} // tabIndex of textarea\r\n//                 onBlur={(e)=>{setCompanyDecription(cDes)\r\n//                 }}\r\n//                 />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                      datePosted\r\n//                 </label><br />\r\n//                 <input type=\"date\" onChange={(e) => setDatePosted(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     planType\r\n//                 </label><br />\r\n//                 <input type=\"text\" onChange={(e) => setPlanType(e.target.value)} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                    jobPosted\r\n//                 </label><br />\r\n//                 <input type=\"number\" onChange={(e) => setJobPosted(parseInt(e.target.value))} />\r\n//             </div>\r\n\r\n//             <div onClick={()=>{\r\n//                 postJob()\r\n//             }} className=\"btn btn-primary\">\r\n//                 Add job\r\n//             </div>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n// export default Contact","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport swal from '@sweetalert/with-react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faPenNib, faPenAlt, faPen, faKiwiBird, faUser, faComment, faThumbsDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Spinner } from 'reactstrap';\r\nimport getProfile from './getProfile';\r\n\r\nexport default class Tweeter extends Component {\r\n    state = {\r\n        tweets: [],\r\n        name: '',\r\n        comment: '',\r\n        liked: false,\r\n        unliked: false\r\n    }\r\n    componentDidMount() {\r\n        this.loadTweets()\r\n    }\r\n    loadTweets = function () {\r\n        fetch(`https://apiarticlepengist.herokuapp.com/get-tweets`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => this.setState({ tweets: resJson.tweets.reverse() }))\r\n            .catch(err => err.message)\r\n\r\n    }\r\n\r\n\r\n    async like(id) {\r\n        let liked = await fetch(`https://apiarticlepengist.herokuapp.com/like-tweet/${id}`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!liked.error) {\r\n            let likedTweets = JSON.parse(localStorage.getItem('likedTweets')) || { ids: [''] }\r\n            localStorage.setItem('likedTweets', JSON.stringify({ ids: [...likedTweets.ids, id] }))\r\n            this.loadTweets()\r\n            //   return this.setState({ liked: true })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async comment(id) {\r\n        if (!this.state.name || !this.state.comment) {\r\n            return swal('', 'Enter name and comment', 'info')\r\n        }\r\n        let liked = await fetch(`https://apiarticlepengist.herokuapp.com/comment-tweet/${id}`, {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                comment: this.state.comment,\r\n                name: this.state.name\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!liked.error) {\r\n            this.loadTweets()\r\n            return this.setState({ comment: '', name: '' })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container-fluid\">\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <div className=\"col-md-5 offset-md-3 col-sm-12\">\r\n                            <h3 style={{ fontWeight: 'bold', fontSize: 24 }} >The Street of Tweeter  <FontAwesomeIcon icon={faKiwiBird} /></h3>\r\n                            <p>\r\n                                Stay updated\r\n                        </p>\r\n                        </div>\r\n\r\n                        <div style={{ borderRadius: 7 }} className=\"col-md-6 offset-md-3 col-sm-12 medias\">\r\n                            {\r\n                                this.state.tweets.length > 0 ?\r\n                                    this.state.tweets.map((tweet) => {\r\n                                        let likedTweets = JSON.parse(localStorage.getItem('likedTweets')) || { ids: [''] }\r\n                                        const alreadyLiked = likedTweets.ids.includes(tweet._id)\r\n                                        let color = \"green\"\r\n                                        return (\r\n                                            <>\r\n                                                <span onClick={()=> getProfile(tweet.name)} style={{alignItems:'center', display:'flex', flexDirection:'row'}} className=\"tweet_name\"><FontAwesomeIcon icon={faUser} style={{ backgroundColor: 'rgba(0,0,0,0.5)',cursor:'pointer',borderRadius:'50%', padding: 2,width:20, height:20,marginRight:10, color: 'white' }} />{tweet.name}</span>\r\n                                                <div style={{ borderRadius: 5, border:'1px solid rgba(0,0,0,0.1)', padding:16 }} className=\"media my-4\">\r\n\r\n\r\n                                                    <div>\r\n\r\n                                                        <div style={{width:'100%'}} className=\"media-body\">\r\n                                                            <div style={{padding:10}}>\r\n\r\n                                                          \r\n                                                            <h6 className=\"my-2\" style={{ fontWeight: 'bold' }}>{tweet.title}</h6>\r\n                                                            <small style={{fontSize:14, marginBottom:10}}>{tweet.content}</small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {tweet.imageUrl && <img style={{ width: '100%', height: '100%' }} src={tweet.imageUrl} className=\"mr-3\" alt=\"...\" />}\r\n                                                        <div />\r\n                                                        {tweet.url && <a href={tweet.url} className=\"ml-2\" target=\"_blank\" style={{ marginTop: 20 }}>\r\n                                                            Read More\r\n                                                     </a>}\r\n                                                        <div style={{ justifyContent: 'space-between', display:'flex' }} className=\"row offset-md-2 my-4\">\r\n                                                            <div className=\"col-6\">\r\n                                                                <div style={{padding:'0 0 0 10px'}}>\r\n                                                                <FontAwesomeIcon onClick={() => {\r\n                                                                    if (alreadyLiked) {\r\n                                                                        return\r\n                                                                    }\r\n\r\n                                                                    this.like(tweet._id)\r\n                                                                }} style={{ fontSize: 20, marginLeft:20, cursor: 'pointer', color: !alreadyLiked ? 'rgba(0,0,0,0.5)' : 'green' }} icon={faThumbsUp} />\r\n\r\n                                                                <span style={{fontSize:13}} className=\"ml-1\">{alreadyLiked ? `You and ${tweet.likes - 1} others` : tweet.likes} </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col\">\r\n                                                             <FontAwesomeIcon onClick={()=>{\r\n                                                                 this.unLike(tweet._id)\r\n                                                             }} style={{fontSize:20,cursor:'pointer', color:'rgba(0,0,0,0.5)'}} icon={faThumbsDown}/>\r\n                                                             <span className=\"ml-1\">90</span>\r\n                                                         </div> */}\r\n                                                            <div onClick={() => {\r\n                                                                swal(\r\n                                                                    <div>\r\n                                                                        <div>\r\n                                                                            <input onChange={(e) => this.setState({ name: e.target.value })} className=\"form-control\" placeholder=\"Enter your name\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"mt-3\">\r\n                                                                            <textarea onChange={(e) => this.setState({ comment: e.target.value })} className=\"form-control\" placeholder=\"Enter your comment\">\r\n                                                                            </textarea>\r\n                                                                        </div>\r\n\r\n\r\n\r\n                                                                    </div>).then(() => {\r\n                                                                        this.comment(tweet._id)\r\n                                                                    })\r\n                                                            }} className=\"col-6\">\r\n                                                                <FontAwesomeIcon style={{ fontSize: 20, cursor: 'pointer', color: 'rgba(0,0,0,0.5)' }} icon={faComment} />\r\n                                                                <span className=\"ml-1\">{tweet.comments ? tweet.comments.length : 0}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h4 className=\"ml-2\">Comments</h4>\r\n                                                        </div>\r\n\r\n                                                         {\r\n                                                             tweet.comments.map((comment)=>{\r\n                                                                 return(\r\n\r\n                                                               \r\n                                                                 <div style={{backgroundColor:'rgba(0,0,0,0.01)', padding:10}}>\r\n                                                                <div style={{color:'rgba(0,0,0,0.5)', fontSize:13, alignItems:'center', display:'flex', flexDirection:'row'}}>\r\n                                                                <FontAwesomeIcon  icon={faUser} style={{ backgroundColor: 'rgba(0,0,0,0.4)',marginRight:10,  padding: 2,width:20,borderRadius:'50%', height:20, color: 'white' }} /> {comment.name}\r\n                                                                 </div>\r\n                                                                 <div style={{color:'rgba(0,0,0,1)',marginTop:10, fontSize:16}}>\r\n                                                                 {comment.comment}\r\n                                                                 </div>\r\n\r\n                                                                 <small style={{fontSize:12}}>\r\n                                                                     {\r\n                                                                         new Date(comment.date).toLocaleString()\r\n                                                                     }\r\n                                                                 </small>\r\n                                                                 <hr/>\r\n                                                                </div>\r\n                                                                  )\r\n\r\n                                                             })\r\n                                                         }\r\n                                                        <div className=\"row\">\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr/>\r\n                                            </>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <Spinner />\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n                            <a class=\"btn btn_thick btn-lg my-4\" href=\"/signup\" role=\"button\">Become a Pengister</a>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div style={{ padding: 20, width: '100%', marginTop: 50 }} className=\"\">\r\n                            <p className=\"text-center text-secondary\">  ©copy 2020 Pengist inc</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport swal from '@sweetalert/with-react'\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowCase from './ShowCase';\r\nexport default class Updated extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articles: []\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        await this.loadArticles()\r\n    }\r\n    async loadArticles() {\r\n\r\n        let resp = await fetch(`https://apiarticlepengist.herokuapp.com/get-recent`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n        if (resp.error) {\r\n            return swal('', resp.error, 'error')\r\n        }\r\n        else if (resp === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            console.log(resp)\r\n            this.setState({ articles: resp })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div className=\"row article\">\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }} className=\"col-md-12 col-sm-12\">\r\n                            <div className=\"col-md-6 p-0 media_cont col-sm-12 mb-4\">\r\n                                <h4>\r\n                                    Updated Stories For Today\r\n                                </h4>\r\n                                <div className=\"col-md-12 col-sm-12 medias\">\r\n                                    {\r\n                                        this.state.articles.length > 0 ?\r\n                                            this.state.articles.map(article => {\r\n                                                return (\r\n                                                    <ShowCase article={article} />\r\n                                                )\r\n                                            })\r\n\r\n                                            :\r\n                                            <Spinner />\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ShowCase from './ShowCase'\r\nimport Nav from './Nav'\r\nimport { Spinner } from 'reactstrap';\r\nimport swal from '@sweetalert/with-react'\r\nexport default class Trending extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articles: []\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        await this.loadArticles()\r\n    }\r\n    async loadArticles() {\r\n\r\n        let resp = await fetch(`https://apiarticlepengist.herokuapp.com/get-trending`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n        if (resp.error) {\r\n            return swal('', resp.error, 'error')\r\n        }\r\n        else if (resp === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            console.log(resp)\r\n            this.setState({ articles: resp })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div className=\"row article\">\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }} className=\"col-md-12 col-sm-12\">\r\n                            <div className=\"col-md-6 p-0 media_cont col-sm-12 mb-4\">\r\n                                <h4>\r\n                                    Trending Stories For Today\r\n                                </h4>\r\n                                <div className=\"col-md-12 col-sm-12 medias\">\r\n                                    {\r\n                                        this.state.articles.length > 0 ?\r\n                                            this.state.articles.map(article => {\r\n                                                return (\r\n                                                    <ShowCase article={article} />\r\n                                                )\r\n                                            })\r\n\r\n                                            :\r\n                                            <Spinner />\r\n\r\n                                    }\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\n\r\nimport swal from '@sweetalert/with-react'\r\nimport renderWithHTML from 'react-render-html'\r\nimport ReactHtmlParser, { processNodes, convertNodeElement, htmlParser } from 'react-html-parser'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { Spinner } from 'reactstrap';\r\nimport getProfile from './getProfile'\r\nexport default class Episode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            article: {},\r\n            name: '',\r\n            liked: false,\r\n            comment: '',\r\n            isAvail: '',\r\n            content: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.loadArticle()\r\n    }\r\n    async loadArticle() {\r\n        let article = await fetch(`https://apiarticlepengist.herokuapp.com/get-episode/${this.props.match.params.id}/${this.props.match.params.episode}`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (article.error) {\r\n            return swal('Oops', 'cannot load content,try again later', 'info')\r\n        }\r\n        else {\r\n\r\n            let likedArticles = JSON.parse(localStorage.getItem('likedArticles')) || { ids: [''] }\r\n            if (likedArticles.ids.includes(article._id)) {\r\n                this.setState({ liked: true })\r\n            }\r\n            if (!article.article) {\r\n                return this.setState({ isAvail: 'notAvail' })\r\n            }\r\n            this.setState({ content: article.article.content })\r\n            return this.setState({ article: article.article, isAvail: 'true' })\r\n\r\n\r\n        }\r\n\r\n    }\r\n    async like() {\r\n        let liked = await fetch(`https://apiarticlepengist.herokuapp.com/post-like/${this.state.article._id}`, {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!liked.error) {\r\n            let likedArticles = JSON.parse(localStorage.getItem('likedArticles')) || { ids: [''] }\r\n            localStorage.setItem('likedArticles', JSON.stringify({ ids: [...likedArticles.ids, this.state.article._id] }))\r\n            await this.loadArticle()\r\n            return this.setState({ liked: true })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async comment() {\r\n        let liked = await fetch(`https://apiarticlepengist.herokuapp.com/post-comment/${this.state.article._id}`, {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                text: this.state.comment,\r\n                postedOn: Date.now()\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!liked.error) {\r\n            await this.loadArticle()\r\n            return this.setState({ comment: '' })\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        const { article } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div className=\"row article\">\r\n                        <div className=\"col-md-8 col-sm-12\">\r\n                            {\r\n                                !this.state.isAvail ?\r\n                                    <Spinner />\r\n                                    :\r\n                                    this.state.isAvail === \"true\" ?\r\n                                        <>\r\n                                            <h1>\r\n                                                {article.title}\r\n                                            </h1>\r\n                                            {article.category === \"Series\" && <div>Episode {article.episode}</div>}\r\n\r\n                                            <p style={{ fontWeight: 'bold',cursor:'pointer', alignItems: 'center', display: 'flex', flexDirection: 'row' }} className=\"my-4\">\r\n                                                <FontAwesomeIcon onClick={() => getProfile(article.authorName)} style={{ fontSize: 24, color: \"white\", backgroundColor: \"rgba(0,0,0,0.4)\", cursor: 'pointer', marginRight: 10, borderRadius: '50%' }} icon={faUser} />   By {article.authorName}\r\n                                            </p>\r\n                                            <p className=\"text-secondary\">\r\n                                                Posted on {new Date(article.dateAdded).toDateString()}\r\n                                            </p>\r\n                                            {\r\n                                                article.imageUrl\r\n                                                &&\r\n                                                <div style={{ backgroundImage: `url(${article.imageUrl})` }} className=\"art_img\">\r\n\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                <div>\r\n                                                    {\r\n                                                        ReactHtmlParser(this.state.content)\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            }\r\n\r\n\r\n\r\n                                            <hr />\r\n\r\n                                            <p style={{ fontSize: 16 }}>\r\n                                                WRITTEN BY\r\n                     </p>\r\n                                            <h3 style={{ fontWeight: 'bold' }}>\r\n                                                <FontAwesomeIcon onClick={() => getProfile(article.authorName)} style={{ fontSize: 30, color: \"white\", backgroundColor: \"rgba(0,0,0,0.4)\", cursor: 'pointer', marginRight: 10, borderRadius: '50%' }} icon={faUser} />  {article.authorName}\r\n\r\n                                            </h3>\r\n                                            {article.category === \"Series\" && <a href={`/episode/${article.articleId}/${article.episode + 1}`}><div className=\"btn float-right btn-success\">Move to episode {article.episode + 1} <FontAwesomeIcon icon={faArrowRight} /> </div></a>}\r\n\r\n                                            <p>\r\n                                                <span onClick={() => {\r\n                                                    if (!this.state.liked) {\r\n                                                        this.like()\r\n                                                    }\r\n\r\n\r\n\r\n                                                }} style={{ padding: 10, marginTop:40, justifyContent: 'center', borderRadius: \"50%\", height: 70, width: 70, alignItems: 'center', display: 'flex', border: `1px solid ${this.state.liked ? '#28a745' : 'rgba(0,0,0,0.3)'}` }}>\r\n                                                    <FontAwesomeIcon style={{ height: 24, width: 24, color: this.state.liked ? '#28a745' : 'rgba(0,0,0,0.4)', marginRight: 10 }} icon={faThumbsUp} />\r\n                                                    {\r\n                                                        article.numberOfLikes\r\n                                                    }\r\n                                                </span>\r\n\r\n\r\n\r\n                                            </p>\r\n                                            <h5 className=\"mt-4\">Comments {article.noOfComments}</h5>\r\n\r\n\r\n                                            <div style={{ marginBottom: 40 }} className=\"p-1\">\r\n\r\n                                                {article.comments &&\r\n                                                    article.comments.map(comment => {\r\n                                                        return (\r\n                                                            <div key={comment._id} className=\"row  mt-2\" style={{ backgroundColor: 'rgba(0,0,0,0.04)', padding: 10, borderRadius: 7 }}>\r\n                                                                <div className=\"col-sm-12 col-md-3\">\r\n                                                                    <span style={{ fontSize: 13, color: \"rgba(0,0,0,0.6)\" }}>{comment.name}</span>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                                    <span >{comment.text}</span>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-12 col-md-2\">\r\n                                                                    <small>{new Date(comment.postedOn).toLocaleString()}</small>\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            <div >\r\n                                                <input type=\"text\"\r\n                                                    className=\"input-box\"\r\n                                                    value={this.state.name}\r\n                                                    onChange={(e) => this.setState({ name: e.target.value })}\r\n                                                    placeholder=\"Enter your name\"\r\n                                                />\r\n\r\n                                                <textarea type=\"text\"\r\n                                                    className=\"form-control mt-2\"\r\n                                                    value={this.state.comment}\r\n                                                    onChange={(e) => this.setState({ comment: e.target.value })}\r\n                                                    placeholder=\"Write comment\"\r\n                                                ></textarea>\r\n\r\n                                                <button onClick={() => {\r\n                                                    if (!this.state.comment || !this.state.name) {\r\n                                                        return swal('', 'Please enter name and comment to perform this action', 'error')\r\n                                                    }\r\n                                                    this.comment()\r\n                                                }} className=\"btn_thick my-3\">\r\n                                                    Comment\r\n                                            </button>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <h1 className=\"text-center mb-3\">Thank you very much for going through this post</h1>\r\n\r\n                                            <h4 className=\"text-center\">You will be notified if another episode is posted</h4>\r\n\r\n                                        </>\r\n\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport swal from 'sweetalert';\r\nimport { Spinner } from 'reactstrap';\r\nexport default class Forums extends Component {\r\n    state = {\r\n        name: '',\r\n        message: '',\r\n        feeds: [],\r\n        reply: ''\r\n    }\r\n    async componentDidMount() {\r\n        await this.loadFeeds()\r\n    }\r\n    loadFeeds = async () => {\r\n        await fetch(`https://apiarticlepengist.herokuapp.com/get-feeds`, {\r\n            method: 'Get',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => this.setState({ feeds: resJson.feedbacks.reverse() }))\r\n            .catch(err => err.message)\r\n    }\r\n\r\n    async reply(_id) {\r\n        if (!this.state.reply) {\r\n            return swal('Please enter your reply before clicking reply', '', 'error')\r\n        }\r\n        let reponse = await fetch(`https://apiarticlepengist.herokuapp.com/feed-res/${_id}`, {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                reply: this.state.reply\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n        if (!reponse.error) {\r\n            this.loadFeeds()\r\n            swal('', 'reply sent', 'success')\r\n            return this.setState({ reply: '' })\r\n        }\r\n\r\n\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.name || !this.state.message) {\r\n            return swal('Please enter your name and message', '', 'error')\r\n        }\r\n        const resBody = await fetch(\"https://apiarticlepengist.herokuapp.com/post-feed\", {\r\n            method: 'Post',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                content: this.state.message\r\n            })\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then(resJson => resJson)\r\n            .catch(err => err.message)\r\n\r\n\r\n        if (resBody.error) {\r\n            return swal('', resBody.error, 'error')\r\n        }\r\n        else if (resBody === \"Failed to fetch\") {\r\n\r\n            return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n        }\r\n        else {\r\n            swal('posted', '', 'success')\r\n            return this.loadFeeds()\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4  iii\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div class=\"form-group \">\r\n                                    <label for=\"exampleFormControlInput1\">Enter your name</label>\r\n                                    <input onChange={(e) => this.setState({ name: e.target.value })} type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"e.g Adewumi Sunkanmi\" />\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleFormControlTextarea1\">What would you like to say</label>\r\n                                    <textarea onChange={(e) => this.setState({ message: e.target.value })} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"2\"></textarea>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <button type=\"submit\" className=\"btn btn-success form-control\">\r\n                                        Create Topic\r\n                                </button>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div style={{ backgroundColor: 'rgba(0,0,0,0.04)' }} className=\"col-md-8 p-4 iii\">\r\n                            {\r\n                                this.state.feeds.length > 0 ?\r\n                                    this.state.feeds.map(feed => {\r\n                                        return (\r\n                                            <div style={{ backgroundColor: 'white', boxShadow: \"0 0 10px 0 rgba(0,0,0,0.1)\", borderRadius: 5 }} className=\"row p-4 my-3\">\r\n                                                <div>\r\n                                                    <h5>{feed.content}</h5>\r\n\r\n                                                    <p style={{ fontSize: 14 }}>By: {feed.name}</p>\r\n                                                    <small style={{ top: 10, right: 10 }}>\r\n                                                        {\r\n                                                            new Date(feed.datePosted).toLocaleString()\r\n                                                        }\r\n                                                        <div >\r\n                                                            <div className=\"mb-3\">\r\n                                                                <b>Replies</b>\r\n                                                            </div>\r\n                                                            {\r\n                                                                feed.replies.map(reply => {\r\n                                                                    return (\r\n                                                                        <div style={{ backgroundColor: 'rgba(0,0,0,0.03)', padding: 10, borderBottom: '1px solid rgba(0,0,0,0.1)' }}>\r\n\r\n                                                                            <div style={{ fontSize: 14 }}>\r\n                                                                                {reply.reply}\r\n                                                                            </div>\r\n                                                                            <div>\r\n                                                                                <small>{new Date(reply.datePosted).toLocaleString()}</small>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                    )\r\n\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                        <hr />\r\n                                                        <div>\r\n                                                            <span>Replies {feed.noOfRes}</span>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <input onChange={(e) => {\r\n                                                                this.setState({ reply: e.target.value })\r\n                                                            }} type=\"text\" placeholder=\"Type here\" />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <span onClick={() => {\r\n                                                                this.reply(feed._id)\r\n                                                            }} className=\"btn btn-success  btn-sm my-1\">Reply</span>\r\n                                                        </div>\r\n\r\n\r\n                                                    </small>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <Spinner />\r\n                            }\r\n\r\n                            {/* <form onSubmit={this.handleSubmit}>\r\n                            <div class=\"form-group \">\r\n                                <label for=\"exampleFormControlInput1\">Enter your name</label>\r\n                                <input onChange={(e) => this.setState({ name: e.target.value })} type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleFormControlTextarea1\">What would you like to say</label>\r\n                                <textarea onChange={(e) => this.setState({ message: e.target.value })} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"2\"></textarea>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn_thick form-control\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </form> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import { faClock, faInbox, faLink, faPlaneDeparture, faPowerOff, faTablet, faTasks, faUserCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { Component } from 'react'\r\nimport Nav from './Nav'\r\n\r\nexport default class Starter extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div style={{ backgroundColor: \"rgba(0,0,0,0.04)\", minHeight: '100vh', paddingTop: 20 }} className=\"container-fluid\">\r\n                    <h3 className=\"mb-3\">How to get started as a pengister</h3>\r\n                    <div className=\"col-md-7\">\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item d-flex  align-items-center\">\r\n                                <h1>1<FontAwesomeIcon style={{ marginLeft: 13, color: 'rgba(0,0,0,0.6)' }} icon={faUserCheck} /> </h1>  <br />\r\n                                <div className=\"ml-3\">\r\n                                    Create an account with us using your email account\r\n                              </div>\r\n                                <span className=\"ml-4\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                                    this.props.history.push('/signup')\r\n                                }} className=\"ml-3 text-primary\">Create account</span>\r\n                            </li>\r\n                            <li class=\"list-group-item d-flex  align-items-center\">\r\n                                <h1>2 <FontAwesomeIcon style={{ marginLeft: 9, color: 'rgba(0,0,0,0.6)' }} icon={faClock} /></h1>   <div className=\"ml-3\">Navigate to your Dashboard page and click on the \"Create a new post\" Button</div>\r\n\r\n                            </li>\r\n                            <li class=\"list-group-item d-flex  align-items-center\">\r\n                                <h1>3 <FontAwesomeIcon style={{ marginLeft: 12, color: 'rgba(0,0,0,0.6)' }} icon={faTasks} /></h1>  <div className=\"ml-3\">Fill the forms including the content of your post</div>\r\n                            </li>\r\n                            <li class=\"list-group-item d-flex align-items-center\">\r\n                                <h1>4  <FontAwesomeIcon style={{ marginLeft: 12, color: 'rgba(0,0,0,0.6)' }} icon={faPowerOff} /> </h1> <div className=\"ml-3\">Click submit and that's it!!!. Your post would automatically appear at the featured post for the day.</div>\r\n\r\n                            </li>\r\n                            <li class=\"list-group-item d-flex align-items-center\">\r\n                                <h1>5 <FontAwesomeIcon style={{ marginLeft: 12, color: 'rgba(0,0,0,0.6)' }} icon={faLink} />  </h1> <div className=\"ml-3\">We empower users  to share public posts, just go to the tweeter handler at your dashboard and start posting interesting and impactful stuffs</div>\r\n\r\n                            </li>\r\n\r\n\r\n                        </ul>\r\n                        <div style={{ backgroundColor: 'white', padding: 20, marginTop: 50 }}>\r\n                            <p>Please note that if you are posting a series, an id would be generated for you which you will need while posting other episodes for that series</p>\r\n                            <p>Have a question? feel free to <span onClick={() => {\r\n                                this.props.history.push('/contact')\r\n                            }} className=\"btn btn-success\">Contact us</span></p>\r\n\r\n                    or\r\n                    <p>Visit our forums page to raise a topic, question or suggestion</p>\r\n                    <div onClick={() => {\r\n                                this.props.history.push('/forums')\r\n                            }} className=\"btn btn-outline-success mt-1 \">Checkout forum</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Spinner } from 'reactstrap'\r\nimport Home from './Components/Home';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Login from './Components/Login';\r\nimport Dashboard from './Components/Dashboard/Dashboard'\r\nimport Article from './Components/Article';\r\nimport Category from './Components/Category';\r\nimport About from './Components/About';\r\nimport Contact from './Components/Contact';\r\nimport Tweeter from './Components/Tweets';\r\nimport Updated from './Components/Updated';\r\nimport Trending from './Components/Trending';\r\nimport Episode from './Components/Episode';\r\nimport firebase from 'firebase'\r\nimport Forums from './Components/Forums';\r\nimport Starter from './Components/Starter';\r\n// import './firebaseConfig'\r\nexport default class App extends Component {\r\n  componentDidMount() {\r\n    var firebaseConfig = {\r\n      apiKey: \"AIzaSyCFWiWBzLrovTeIrOgGVM2gmQWdnd56Fyc\",\r\n      authDomain: \"test-project-34def.firebaseapp.com\",\r\n      databaseURL: \"https://test-project-34def.firebaseio.com\",\r\n      projectId: \"test-project-34def\",\r\n      storageBucket: \"test-project-34def.appspot.com\",\r\n      messagingSenderId: \"13998930621\",\r\n      appId: \"1:13998930621:web:7a6d2d62554fb3213655d4\",\r\n      measurementId: \"G-C42343XHF9\"\r\n    };\r\n    // Initialize Firebase\r\n    firebase.initializeApp(firebaseConfig);\r\n    firebase.analytics();\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/forums\" component={Forums} />\r\n          <Route path=\"/signup\" component={Login} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/updated\" component={Updated} />\r\n          <Route path=\"/trending\" component={Trending} />\r\n          <Route path=\"/getstarted\" component={Starter} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route path=\"/article/:id\" component={Article} />\r\n          <Route path=\"/episode/:id/:episode\" component={Episode} />\r\n          <Route path=\"/category/:category\" component={Category} />\r\n          <Route path=\"/tweeter\" component={Tweeter} />\r\n\r\n        </Switch>\r\n\r\n      </BrowserRouter>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class ShowCase extends Component {\r\n\r\n   render() {\r\n      const { article } = this.props\r\n      return (\r\n         < div className=\"media\" key={article._id}>\r\n           {article.imageUrl && <img src={article.imageUrl} className=\"mr-3 article_im\" alt=\"...\" />}\r\n            <div className=\"media-body\">\r\n               <h5 className=\"mt-1\">{article.title}</h5>\r\n               <div>\r\n                 {article.pretext && <small className=\"mt-3\">{article.pretext}</small>}\r\n               </div>\r\n\r\n               <div style={{ borderBottom: '1px solid rgba(0,0,0,0.07)' }} className=\"row justify-content-end pr-3\">\r\n                  <span style={{ marginLeft: 20 }}>\r\n                     <FontAwesomeIcon style={{ color: 'rgba(0,0,0,0.5)', fontSize: 13 }} icon={faThumbsUp} /> <small>{article.numberOfLikes}</small>\r\n                  </span>\r\n                  <span className=\"ml-3\">\r\n                     <FontAwesomeIcon style={{ color: 'rgba(0,0,0,0.5)', fontSize: 13 }} icon={faComment} /> <small>{article.noOfComments}</small>\r\n                  </span>\r\n               </div>\r\n               {article.category === \"Series\" ? <div> <small>Episode: <b>{article.episode}</b></small></div> : null}\r\n\r\n               <small>Category : <b className=\"\">{article.category}</b></small><br />\r\n               <small style={{ fontSize: 11, }}>Posted On {new Date(article.dateAdded).toDateString()}</small>\r\n               <div className=\"mt-1\">\r\n                  <a style={{ color: \"white\" }} href={`/article/${article._id}`} className=\"btn_thick mt-2 read\">\r\n                     Read More\r\n                </a>\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n\r\n      )\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faGifts, faUsers, faArrowRight, faPeopleCarry, faAirFreshener, faAddressCard, faLifeRing, faRing, faUserGraduate, faBaby, faArchway, faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// import {  faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from './Nav';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ScrollAnimation from 'react-animate-on-scroll'\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowCase from './ShowCase';\r\n// import {Spinner} from 'reactstrap';\r\nexport default class Home extends Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         cur: 0,\r\n         sponsored: [],\r\n         featured: [],\r\n         trending: [],\r\n         notes: []\r\n\r\n      }\r\n   }\r\n   async componentDidMount() {\r\n      await this.loadPosts()\r\n      this.switchEvent = setInterval(() => {\r\n         this.setState(prevState => {\r\n            return { cur: prevState.cur === 4 ? 0 : prevState.cur + 1 }\r\n         })\r\n      }, 2000)\r\n   }\r\n   async componentWillUnmount() {\r\n      clearInterval(this.switchEvent)\r\n   }\r\n\r\n   async loadPosts() {\r\n      await fetch(`https://apiarticlepengist.herokuapp.com/get-notes`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => this.setState({ notes: resJson.notes }))\r\n         .catch(err => err.message)\r\n      let sresp = await fetch(`https://apiarticlepengist.herokuapp.com/get-sponsored`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => resJson)\r\n         .catch(err => err.message)\r\n      let tresp = await fetch(`https://apiarticlepengist.herokuapp.com/get-trending`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => resJson)\r\n         .catch(err => err.message)\r\n\r\n      let fresp = await fetch(`https://apiarticlepengist.herokuapp.com/get-featured`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => resJson)\r\n         .catch(err => err.message)\r\n\r\n\r\n      this.setState({ featured: !fresp.error ? fresp : [], sponsored: !sresp.error ? sresp : [], trending: !tresp.error ? tresp : [] })\r\n   }\r\n   render() {\r\n      let events = [\"Article\", \"Story\", \"Vision\", 'Mind', \"Inspiration\"]\r\n\r\n      return (\r\n\r\n         <div>\r\n\r\n\r\n            <div>\r\n               <div onClick={() => {\r\n                  this.props.history.push('/forums')\r\n               }} className=\"feedback\">\r\n                  Feedback\r\n                </div>\r\n\r\n\r\n\r\n               <div id=\"top\" className=\"container-fluid bg__\">\r\n\r\n                  <Nav navigate={this.props.history} />\r\n                  <span className=\"note\" style={{ fontSize: 12, color: 'rgba(0,0,0,0.8)', marginTop: -20, textAlign: 'center' }}>{this.state.notes[0] ? `${this.state.notes[this.state.notes.length - 1].note}` : null}</span>\r\n\r\n\r\n                  <div className=\"row cont_\">\r\n\r\n                     {/* <div className=\"bender\">\r\n              \r\n          </div> */}\r\n                     <div className=\"col-md-6 col-sm-12 home_left_\">\r\n                        {/* <h2  className=\"p-features__headline\">The easy way to accept Bitcoin for online payments</h2> */}\r\n                        <h2 className=\"home_h1 \">Thank you for visiting Pengist Writers & Readers Crib</h2>\r\n\r\n                        <h5>Make your relaxing worthwhile with our breath taking stories and catchy articles. <i style={{ fontSize: 14 }}>Stay with us...</i></h5>\r\n                        <div className=\"\">\r\n                           <div className=\"p_1\">\r\n                              <br data-v-74a6fb34=\"\" />\r\n                        Express your <span className=\"bold normal-text\">{events[this.state.cur]}</span> to the fullest\r\n\r\n                        </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"ch\"><FontAwesomeIcon icon={faCheck} style={{ height: 15, width: 15, color: \"#20c997\", marginRight: 30 }} />Everything with Ease.</div>\r\n\r\n                        <div className=\"btn_class\"><button onClick={() => this.props.history.push('/signup')} type=\"button\" className=\"btn_outline\">\r\n                           Become a Pengister\r\n                </button> <button onClick={() => this.props.history.push('/getstarted')} type=\"button\" style={{ backgroundColor: '#12bb88' }} className=\"btn_thick\">\r\n                              Learn more\r\n                </button></div>\r\n                     </div>\r\n                     <div className=\"col-md-6 media_cont col-sm-12\">\r\n                        <h4 className=\"trend\">Sponsored Post</h4>\r\n                        <div className=\"col-md-8 col-sm-12 medias\">\r\n                           {\r\n                              this.state.sponsored.length > 0 ?\r\n                                 this.state.sponsored.map((article) => {\r\n                                    return (\r\n                                       <ShowCase article={article} />\r\n                                    )\r\n                                 })\r\n                                 :\r\n                                 <div>\r\n                                    <small><Spinner size=\"sm\" /></small>\r\n                                 </div>\r\n\r\n                           }\r\n\r\n\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div className=\"container-fluid\">\r\n                     <div className=\"row\">\r\n                        <div className=\"col-md-6 media_cont col-sm-12\">\r\n                           <h4 className=\"trend\">Trending</h4>\r\n                           <div className=\"col-md-8 col-sm-12 medias\">\r\n                              {\r\n                                 this.state.trending.length > 0 ?\r\n                                    this.state.trending.map((article) => {\r\n                                       return (\r\n                                          <ShowCase article={article} />\r\n                                       )\r\n                                    })\r\n                                    :\r\n                                    <div>\r\n                                       <small><Spinner size=\"sm\" /></small>\r\n                                    </div>\r\n\r\n                              }\r\n\r\n\r\n                           </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-md-6 media_cont col-sm-12\">\r\n                           <h4 className=\"trend mt-4\">Featured</h4>\r\n                           <div className=\"col-md-8 col-sm-12 medias\">\r\n                              {\r\n                                 this.state.featured.length > 0 ?\r\n                                    this.state.featured.map((article) => {\r\n                                       return (\r\n                                          <ShowCase article={article} />\r\n                                       )\r\n                                    })\r\n                                    :\r\n                                    <div>\r\n                                       <small><Spinner size=\"sm\" /></small>\r\n                                    </div>\r\n\r\n                              }\r\n\r\n\r\n                           </div>\r\n                        </div>\r\n\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"container-fluid\">\r\n                     <div className=\"row ll\">\r\n                        <ScrollAnimation animateIn=\"fadeIn\" className=\"col-md-11 col-sm-1- left_back\">\r\n                           <div >\r\n                              <h1>Pengist</h1>\r\n\r\n                              <h4>your sure hub for intriguing stories</h4>\r\n                           </div>\r\n                        </ScrollAnimation>\r\n\r\n                        <div className=\"col-md-4 feat\">\r\n\r\n\r\n                        </div>\r\n\r\n                     </div>\r\n\r\n                     <div className=\"row\">\r\n                        <div style={{ padding: 20, width: '100%', marginTop: 50 }} className=\"\">\r\n                           <p className=\"text-center text-secondary\">  © 2020, Pengist inc</p>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n\r\n               </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n         </div>\r\n\r\n      )\r\n   }\r\n}\r\n"],"sourceRoot":""}