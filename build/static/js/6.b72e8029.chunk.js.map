{"version":3,"sources":["Components/Dashboard/ScheduleEvent.js"],"names":["ScheduleEvent","props","state","articles","changeScreen","this","loadArticles","user","fetch","_id","method","headers","then","response","json","resJson","catch","err","message","resp","error","swal","console","log","setState","onClick","close","style","backgroundColor","className","textAlign","padding","display","justifyContent","length","map","article","fontSize","articleId","Component"],"mappings":"wQAOqBA,E,YAClB,WAAYC,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACVC,SAAU,GACVC,cAAc,GAJD,E,yMAUVC,KAAKC,e,gQAGLC,EAAOF,KAAKJ,MAAMM,K,SACPC,MAAM,4DAAD,OAA6DD,EAAKE,KAAO,CAC5FC,OAAQ,MACRC,QAAS,CACN,eAAgB,sBAGlBC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GAAO,OAAIA,IAChBC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,U,YARjBC,E,QAUKC,M,yCACCC,IAAK,GAAIF,EAAKC,MAAO,U,UAEb,oBAATD,E,0CAECE,IAAK,GAAI,gFAAiF,U,QAGjGC,QAAQC,IAAIJ,GACZd,KAAKmB,SAAS,CAAErB,SAAUgB,I,oIAOtB,IAAD,OAEN,OACG,yBAAKM,QAAS,kBAAM,EAAKxB,MAAMyB,SAASC,MAAO,CAAEC,gBAAiB,eAAiBC,UAAU,aAC1F,wBAAIF,MAAO,CAAEG,UAAW,WAAxB,cACA,yBAAKH,MAAO,CAAEI,QAAS,GAAKF,UAAU,QACnC,yBAAKF,MAAO,CAAEK,QAAS,OAAQC,eAAgB,SAAUF,QAAS,EAAGH,gBAAiB,SAAWC,UAAU,uBAIxG,yBAAKF,MAAO,CAAEI,QAAS,IAAMF,UAAU,UAEjCxB,KAAKH,MAAMC,SAAS+B,OAAS,EAC1B7B,KAAKH,MAAMC,SAASgC,IAAI,SAAAC,GACrB,OACG,6BACG,2BAAOT,MAAO,CAAEU,SAAU,IAAMR,UAAU,IAA1C,eAA0DO,EAAQE,WAClE,kBAAC,IAAD,CAAUF,QAASA,OAO5B,2E,GAjEgBG","file":"static/js/6.b72e8029.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport swal from '@sweetalert/with-react'\r\nimport { Spinner } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport Home from '../Home';\r\nimport ShowCase from '../ShowCase';\r\nexport default class ScheduleEvent extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         articles: [],\r\n         changeScreen: false,\r\n\r\n\r\n      }\r\n   }\r\n   async componentDidMount() {\r\n      await this.loadArticles()\r\n   }\r\n   async loadArticles() {\r\n      const user = this.props.user\r\n      let resp = await fetch(`https://apiarticlepengist.herokuapp.com/get-user-article/${user._id}`, {\r\n         method: 'Get',\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      })\r\n         .then((response) => response.json())\r\n         .then(resJson => resJson)\r\n         .catch(err => err.message)\r\n\r\n      if (resp.error) {\r\n         return swal('', resp.error, 'error')\r\n      }\r\n      else if (resp === \"Failed to fetch\") {\r\n\r\n         return swal('', 'we could not access the server try again and ensure internet connection is on', 'error')\r\n      }\r\n      else {\r\n         console.log(resp)\r\n         this.setState({ articles: resp })\r\n      }\r\n\r\n\r\n\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <div onClick={() => this.props.close()} style={{ backgroundColor: 'transparent' }} className=\"container\">\r\n            <h1 style={{ textAlign: 'center' }}>Your Posts</h1>\r\n            <div style={{ padding: 0 }} className=\"row \">\r\n               <div style={{ display: 'flex', justifyContent: 'center', padding: 0, backgroundColor: 'white' }} className=\"col-md-12 col-sm-12\">\r\n\r\n\r\n\r\n                  <div style={{ padding: 20 }} className=\"medias\">\r\n                     {\r\n                        this.state.articles.length > 0 ?\r\n                           this.state.articles.map(article => {\r\n                              return (\r\n                                 <div>\r\n                                    <small style={{ fontSize: 11 }} className=\"\">article id: {article.articleId}</small>\r\n                                    <ShowCase article={article} />\r\n                                 </div>\r\n\r\n                              )\r\n                           })\r\n\r\n                           :\r\n                           <h4>You have not posted any article yet</h4>\r\n\r\n                     }\r\n\r\n\r\n\r\n\r\n\r\n                  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n               </div>\r\n            </div>\r\n\r\n\r\n         </div>\r\n\r\n      )\r\n   }\r\n}\r\n"],"sourceRoot":""}